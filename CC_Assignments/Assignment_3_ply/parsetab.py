
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightPOWERleftSINCOSTANLOGSQRTCOS DIVIDE LOG LPAREN MINUS MULTIPLY NUMBER PLUS POWER RPAREN SIN SQRT TANexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression POWER expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : SIN LPAREN expression RPAREN\n                  | COS LPAREN expression RPAREN\n                  | TAN LPAREN expression RPAREN\n                  | LOG LPAREN expression RPAREN\n                  | SQRT LPAREN expression RPAREN'
    
_lr_action_items = {'LPAREN':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,],[2,2,15,16,17,18,19,2,2,2,2,2,2,2,2,2,2,]),'NUMBER':([0,2,9,10,11,12,13,15,16,17,18,19,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'SIN':([0,2,9,10,11,12,13,15,16,17,18,19,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'COS':([0,2,9,10,11,12,13,15,16,17,18,19,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'TAN':([0,2,9,10,11,12,13,15,16,17,18,19,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'LOG':([0,2,9,10,11,12,13,15,16,17,18,19,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'SQRT':([0,2,9,10,11,12,13,15,16,17,18,19,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,3,20,21,22,23,24,25,31,32,33,34,35,],[0,-7,-1,-2,-3,-4,-5,-6,-8,-9,-10,-11,-12,]),'PLUS':([1,3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[9,-7,9,-1,-2,-3,-4,-5,-6,9,9,9,9,9,-8,-9,-10,-11,-12,]),'MINUS':([1,3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[10,-7,10,-1,-2,-3,-4,-5,-6,10,10,10,10,10,-8,-9,-10,-11,-12,]),'MULTIPLY':([1,3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[11,-7,11,11,11,-3,-4,-5,-6,11,11,11,11,11,-8,-9,-10,-11,-12,]),'DIVIDE':([1,3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[12,-7,12,12,12,-3,-4,-5,-6,12,12,12,12,12,-8,-9,-10,-11,-12,]),'POWER':([1,3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[13,-7,13,13,13,13,13,13,-6,13,13,13,13,13,-8,-9,-10,-11,-12,]),'RPAREN':([3,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-7,25,-1,-2,-3,-4,-5,-6,31,32,33,34,35,-8,-9,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,9,10,11,12,13,15,16,17,18,19,],[1,14,20,21,22,23,24,26,27,28,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',18),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',19),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',20),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',21),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',22),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',39),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',43),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',47),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',48),
  ('expression -> TAN LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',49),
  ('expression -> LOG LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',50),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',51),
]
